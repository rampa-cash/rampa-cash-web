services:
  rampa-cash-web:
    container_name: rampa-web
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/rampa_cash_prod
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/waitlist"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    profiles:
      - prod

  # Development service (optional)
  rampa-cash-web-dev:
    container_name: rampa-web-dev
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/rampa_cash_dev
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - dev

  # PostgreSQL Database
  postgres:
    container_name: rampa-postgres
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: rampa_cash_dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - dev
      - prod

volumes:
  postgres_data: 